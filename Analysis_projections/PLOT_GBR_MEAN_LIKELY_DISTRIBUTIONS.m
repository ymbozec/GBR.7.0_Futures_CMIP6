%__________________________________________________________________________
%
% REEFMOD PROJECTIONS OF GBR MEAN (WEIGHTED DISTRIBUTIONS)
%
% Yves-Marie Bozec, y.bozec@uq.edu.au, 04/2024
%__________________________________________________________________________
clear
SaveDir = '';

SETTINGS_PLOTS % general settings for plotting

load('GBR.7.0_averages_DHW8.mat') % output metrics averaged across 3,806 reefs (ie, GBR mean values)
load('GBR.7.0_likely_runs_NEW.mat') % gives the IDs of likely runs sampled by bootstrap (N=100) [see SAMPLE_LIKELIHOOD_RUNS.m]

N = size(LIKELY_RUNS(1).select,2); % number of bootstrap samples

% THIS WORKS THE SAME WAY FOR ALL MAIN OUTPUTS:
% - GBR mean total coral cover
% - GBR mean coral cover of heat sensitive taxa
% - GBR mean coral cover of heat tolerant taxa
% - GBR mean heat tolerance of heat sensitive taxa
% - GBR mean heat tolerance of heat tolerant taxa
% - GBR mean density of coral juvemiles (all axa)
% - GBR mean proportion of unhealthy reefs (reef below 5% total coral cover)
% To plot any of those just comment/uncomment the associated line below

% Draws box-whisker plots of yearly (or biannual) distribution of the mean GBR from the weighted ensemble runs for each SSP.
% LIKELY_RUNS(ssp).select is a predetermined list of 2,000 bootstrapped run IDs for each SSP (100 random sampling with replacement
% across all GCMs for each of the 20 cyclone scenarios), where the probability of selecting a GCM is proportional to its
% ECS-based likelihood relative to other GCMs (see by SAMPLE_LIKELIHOOD_RUNS.m).

for ssp = 1:5

    if ssp == 1
        gcm_list = [1:5 7 9];
    else
        gcm_list = [1:10];
    end

    % Concatenate all gcm runs
    X = nan(1,94); % primer

    for gcm = gcm_list
        X = [X ; all_models(ssp,gcm).C_tot(:,1:end)]; OutputName = 'CC_TOT'; maxY = 56; stepY = 10; Ylab = 'Mean coral cover (%)';
        % X = [X ; sum(all_models(ssp,gcm).C_taxa(:,1:end,1:4),3)]; OutputName = 'CC_SENSIT'; maxY = 42; stepY = 10; Ylab = 'Mean coral cover (%)';
        % X = [X ; sum(all_models(ssp,gcm).C_taxa(:,1:end,5:6),3)]; OutputName = 'CC_RESIST'; maxY = 42; stepY = 10;  Ylab = 'Mean coral cover (%)';
        % X = [X ; nanmean(all_models(ssp,gcm).C_taxa_HT_mean(:,1:end,1:4),3)]; OutputName = 'HT_SENSIT'; maxY = 7.6; stepY = 1; Ylab = 'Mean HT (°C-week)';
        % X = [X ; nanmean(all_models(ssp,gcm).C_taxa_HT_mean(:,1:end,5:6),3)]; OutputName = 'HT_RESIST'; maxY = 7.6; stepY = 1; Ylab = 'Mean HT (°C-week)';
        % X = [X ; (all_models(ssp,gcm).nb_coral_juv(:,1:end)+all_models(ssp,gcm).nb_coral_recruit(:,1:end))/400]; OutputName = 'NB_JUV'; maxY = 11.7; stepY = 2; Ylab = 'Mean number of juveniles (m^{-2})';
        % X = [X ; all_models(ssp,gcm).nb_unhealthy_reefs(:,1:end)*100/3806]; OutputName = 'PROP_UNH05_REEFS'; maxY = 100; stepY = 20; Ylab = 'Unhealthy reef habitats (%)';
    end

    X = X(2:end,:); % remove te primer

    % Now sample the run following the list of run ID generated by bootstrap
    X_lik = nan(1,94); % primer
    select  = LIKELY_RUNS(ssp).select; % list of sampled run IDs

    for n = 1:N % for every bootstrap sample
        X_lik = [X_lik ; X(select(:,n),:)];
    end

    X_lik = X_lik(2:end,:); % remove te primer

    % Combine values by 2-year intervals
    Y = [X_lik(:,1:2:end) ; X_lik(:,2:2:end)]; % to get a distri every 2 steps

    % Format list of years accordingly
    Z = repmat(2008:2:2100,size(Y,1),1);

    %% Plot distributions of GBR mean total cover
    hfig = figure;
    set(gca,'color',rgb('PaleTurquoise'),'Layer', 'top')
    set(gca, 'FontName', 'Arial' ,'FontSize',myGraphicParms.FontSizeLabelTicks);

    Y_select = reshape(Y, size(Y,1)*size(Y,2), 1);
    Z_select = single(reshape(Z, size(Z,1)*size(Z,2), 1));

    I = ismember(Z_select, 2008:2:2100); % Only plot every two years

    hold on
    boxplot(Y_select(I==1),Z_select(I==1),'outliers',0.1,'Plotstyle','compact','Color',rgb(All_SSP_colours(ssp)),'symbol','')

    set(gca,'XTickLabel',{' '})
    axis([7 48 0 maxY]) % 8 start in 2022

    set(gca,'Layer', 'top','FontName', 'Arial' ,'FontSize',myGraphicParms.FontSizeLabelTicks);
    yticks([0:stepY:maxY])
    ylabel({Ylab;''},'FontName', 'Arial', 'FontWeight','normal','FontSize',myGraphicParms.FontSizeLabelAxes)

    xticks([12:10:50])
    xticklabels({'2030','2050','2070','2090'})

    T1 = title(All_SSP_names(ssp),'Units','normalized','FontName', 'Arial','FontWeight','bold','FontSize',14);
    T1.Color = rgb(All_SSP_colours(ssp));

    % savefig(hfig,[SaveDir 'GBR.7.0_DHW8_Likely_Distri_GBR_Mean_' OutputName '_SSP' All_SSPs{ssp} '.fig'])
    savefig(hfig,[SaveDir 'GBR.7.0_DHW8_Likely_Distri_GBR_Mean_' OutputName '_BOOT100_SSP' All_SSPs{ssp} '.fig'])

    close all

end

